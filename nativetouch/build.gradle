apply plugin: 'com.android.library'

android {
    compileSdkVersion 27
    defaultConfig {
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a'
        }
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
}

dependencies {
    // Avoid redundant UnityPlayer in final application APK
    compileOnly files('./libs/unityclasses.jar')
}

afterEvaluate {
    generateReleaseBuildConfig.enabled = false
}

android.libraryVariants.all { variant ->
    String variantName = "${variant.name.capitalize()}";
    String deployTaskGroup = "plugin";
    String deployTaskName = "deploy${variantName}PluginArchive"; //variantName like "Debug"
    String dependencyTaskName = "assemble${variantName}";

    String sourceAARFolder = "${buildDir.getPath()}/outputs/aar/";
    String sourceAARName = "${project.name}-${variant.name}.aar";

    //This is my computer but if you wanna use this Gradle script too you can edit the path here
    //so that it output straight to your Unity project.
    String targetAARFolder = "/Users/Sargon/Documents/Unity Projects/Asset Store/NativeTouch/Assets/NativeTouch/Plugins/Android";
    String targetAARName = "NativeTouch.aar";

    task(deployTaskName, dependsOn: dependencyTaskName, type: Copy) {
        from(sourceAARFolder)
        into(targetAARFolder)
        include(sourceAARName)
        rename(sourceAARName, targetAARName)
    }.group = deployTaskGroup;
}
